#!/usr/bin/env python3

import re
import shutil
import sys
from pathlib import Path

import pycman


CACHE_PATHS = [
    '/home/simon/.cache/yay',
    '/home/simon/.cache/pacaur',
]

DESTINATION = '/home/simon/Sync/Local/Paquets/'


def get_include_rules():
    rules_fpath = Path(DESTINATION) / "package-rules.txt"
    rules_text = rules_fpath.read_text()

    rules = []
    for line in rules_text.split('\n'):
        line = line.strip()
        if not line or line.startswith("#"):
            continue
        rules.append(re.compile(line))

    return rules


def pkg_path(db, pkg_name):
    pkg = db.get_pkg(pkg_name)
    if not pkg:
        print(
            f'Error: could not find package "{pkg_name}"',
            file=sys.stderr
        )
        return
    pkg_string = f'{pkg.name}-{pkg.version}-{pkg.arch}'
    for cache_path in CACHE_PATHS:
        pkg_dir = Path(cache_path) / (pkg.base or pkg.name)
        for fpath in pkg_dir.glob(f'{pkg_string}.pkg.*'):
            return fpath


def main():
    alpm = pycman.config.init_with_config('/etc/pacman.conf')
    localdb = alpm.get_localdb()
    rules = get_include_rules()
    for line in sys.stdin:
        pkg_name = line.strip()
        if pkg_name and any(rule.match(pkg_name) for rule in rules):
            path = pkg_path(localdb, pkg_name)
            if path:
                print(f'Copying package: {pkg_name}')
                # Avoid problematic characters
                fname = path.name.replace(':', '__')
                shutil.copy(path, Path(DESTINATION) / fname)


if __name__ == '__main__':
    main()
